# -*- coding: utf-8 -*-
"""car_positioning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HE54oKXwbn4P7zi5p2iRiGoWZTjoyUUY
"""

from PIL import Image

# Paths to the uploaded floor and wall images
wall_path = "wall.png"
floor_path = "floor.png"

# Open the wall and floor images
wall = Image.open(wall_path).convert("RGBA")
floor = Image.open(floor_path).convert("RGBA")

# Resize the wall and floor images to have the same width and adjust heights accordingly
combined_width = max(wall.width, floor.width)
combined_height = wall.height + floor.height

# Resize wall and floor to the same width for a better combination
wall = wall.resize((combined_width, wall.height))
floor = floor.resize((combined_width, floor.height))

# Create a new blank image to combine them
combined_background = Image.new("RGBA", (combined_width, combined_height))

# Paste the wall at the top
combined_background.paste(wall, (0, 0))

# Paste the floor just below the wall
combined_background.paste(floor, (0, wall.height))

# Save the combined image
combined_background.save("combined_wall_floor_background.png")

# Show the result
combined_background.show()

from PIL import Image

# Paths to the car mask and the background image
car_mask_path = 'car_mask_6.png'  # Replace with your car mask file path
car_image_path = 'car_6.jpeg'  # Replace with your original car image path
background_path = 'combined_wall_floor_background.png'  # Replace with your combined wall-floor background image

# Open the car mask and the original car image
car_mask = Image.open(car_mask_path).convert("L")  # Convert the mask to grayscale
original_image = Image.open(car_image_path).convert("RGBA")

# Open the background image
background = Image.open(background_path).convert("RGBA")

# Get the dimensions of the background and car mask
bg_width, bg_height = background.size
car_mask_width, car_mask_height = car_mask.size

# Define a scaling factor to increase the car size
scaling_factor = 2.50  # Change this factor to make the car larger (1.5 increases it by 50%)

# Resize the car image and the mask
new_car_size = (int(car_mask_width * scaling_factor), int(car_mask_height * scaling_factor))
resized_car = original_image.resize(new_car_size, Image.Resampling.LANCZOS)
resized_car_mask = car_mask.resize(new_car_size, Image.Resampling.LANCZOS)

# Calculate the offsets to center the car horizontally and bring it forward on the floor
x_offset = (bg_width - new_car_size[0]) // 2
y_offset = (bg_height )//12  # Adjust this value to bring the car forward (smaller number brings it closer)

# Paste the resized car onto the background using the mask to maintain transparency
background.paste(resized_car, (x_offset, y_offset), mask=resized_car_mask)

# Save the final image with the car properly sized and positioned
background.save('final_image_peeka.png')
background.show()

from PIL import Image, ImageEnhance, ImageOps, ImageFilter  # Added ImageFilter

# Load the car image (the second image)
car_image_path = 'final_image_peeka.png'  # Path to the car image
car_image = Image.open(car_image_path).convert("RGBA")

# Load the shadow mask image (from the first image)
shadow_mask_path = '6.png'  # Path to the shadow mask
shadow_mask = Image.open(shadow_mask_path).convert("L")  # Convert to grayscale

# Resize the shadow mask to fit under the car
shadow_scale_factor = 2.50  # Adjust this scale factor if needed
shadow_size = (int(shadow_mask.width * shadow_scale_factor), int(shadow_mask.height * shadow_scale_factor))
shadow_resized = shadow_mask.resize(shadow_size, Image.Resampling.LANCZOS)

# Adjust the shadow opacity (adjust brightness)
shadow_opacity = 0.7  # You can change this to make the shadow darker or lighter
shadow_resized = ImageEnhance.Brightness(shadow_resized).enhance(shadow_opacity)

# Add a blur to soften the shadow if needed
shadow_resized = shadow_resized.filter(ImageFilter.GaussianBlur(radius=5))

# Convert shadow to RGBA for transparency
shadow_resized_rgba = ImageOps.colorize(shadow_resized, black="black", white="black")

# Calculate the position to place the shadow under the car
x_offset = int((car_image.width - shadow_resized.width) / 2) # Adjust this
y_offset = car_image.height - shadow_resized.height + 100 # Adjust this to align with the car base

# Create a copy of the car image to apply the shadow
car_image_with_shadow = car_image.copy()

# Paste the shadow onto the car image
car_image_with_shadow.paste(shadow_resized_rgba, (x_offset, y_offset), mask=shadow_resized)  # Use the grayscale shadow as the mask

# Save the output
output_image_path = 'car_with_shadow_output.png'
car_image_with_shadow.save(output_image_path)

# Show the final result
car_image_with_shadow.show()



from google.colab import drive
drive.mount('/content/drive')